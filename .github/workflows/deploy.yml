##name: Deploy to production
##
##on:
##  push:
##    branches: [ "master" ]
##  pull_request:
##    branches: [ "master" ]
##
##jobs:
##
##  build:
##    name: Build image
##    runs-on: ubuntu-latest
##
##    steps:
##    - name: Check out code
##      uses: actions/checkout@v2
##
##    - name: Configure AWS credentials
##      uses: aws-actions/configure-aws-credentials@v1
##      with:
##        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
##        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
##        aws-region: us-east-1
##
##    - uses: actions/checkout@v3
##    - name: Set up JDK 1.8
##      uses: actions/setup-java@v1
##      with:
##        java-version: '1.8'
##        distribution: 'temurin'
##        cache: maven
##    - name: Build with Maven
##      run: mvn -B package --file pom.xml
##
##    - name: Login to Amazon ECR
##      id: login-ecr
##      uses: aws-actions/amazon-ecr-login@v1
##
##    - name: Build, tag, and push docker image to Amazon ECR
##      env:
##        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
##        REPOSITORY: springboot_docker_aws
##        IMAGE_TAG: ${{ github.sha }}
##      run: |
##        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
##        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
#
#
#name: Deploy to production
#
#on:
#  push:
#    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]
#jobs:
#  build:
#    name: Build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v1
#      - name: Set up JDK
#        uses: actions/setup-java@v1
#        with:
#          java-version: '8'
#      - name: Build with Maven
#        run: mvn -B package --file pom.xml
#      - name: Upload JAR
#        uses: actions/upload-artifact@v2
#        with:
#          name: artifact
#          path: target/springboot-docker-aws-0.0.1-SNAPSHOT.jar
#  deploy:
#    needs: build
#    name: Deploy
#    runs-on: ubuntu-latest
#    steps:
#      - name: Download JAR
#        uses: actions/download-artifact@v2
#        with:
#          name: artifact
#      #Deploy the artifact (JAR) into AWS Beanstalk
#      - name: Deploy to EB
#        uses: einaregilsson/beanstalk-deploy@v13
#        with:
#          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          #aws_session_token: ${{ secrets.AWS_SESSION_TOKEN }}
#          use_existing_version_if_available: false
#          application_name: springboot-docker-aws-new-05-09-2022
#          environment_name: Springbootdockerawsnew05092022-env
#          version_label: ${{github.SHA}}
#          region: us-east-1
#          deployment_package: springboot-docker-aws-0.0.1-SNAPSHOT.jar
#
